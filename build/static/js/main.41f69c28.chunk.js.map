{"version":3,"sources":["components/contactForm/contactForm.module.css","components/contactList/contactListItem/contactListItem.module.css","components/filter/filter.module.css","components/App.module.css","components/contactList/contactList.module.css","components/contactForm/ContactForm.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleSubmit","e","preventDefault","doublicateContact","props","contacts","map","contact","alert","includes","target","value","newContact","id","uuidv4","getContactInfo","setState","handleChange","this","className","styles","form","onSubmit","label","input","type","placeholder","minLength","maxLength","onChange","button","Component","ContactListItem","deleteContact","item","onClick","ContactList","list","key","Filter","filter","searchFilter","title","proptTypes","PropTypes","string","func","filterContacts","toLowerCase","App","prev","filteredContacts","length","persistedContacts","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,oBCAlID,EAAOC,QAAU,CAAC,KAAO,8BAA8B,OAAS,kC,gBCAhED,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,iBCAxDD,EAAOC,QAAU,CAAC,MAAQ,qB,oBCA1BD,EAAOC,QAAU,CAAC,KAAO,4B,8MCIZC,EAAb,4MACEC,MAAQ,CACNC,KAAM,GACNC,OAAQ,IAHZ,EAMEC,aAAe,SAAAC,GACbA,EAAEC,iBADgB,MAEO,EAAKL,MAAtBC,EAFU,EAEVA,KAAMC,EAFI,EAEJA,OACRI,EAAoB,EAAKC,MAAMC,SAASC,KAAI,SAAAC,GAAO,OAAIA,EAAQT,QACrE,IAAMA,IAAQC,EACZ,OAAOS,MAAM,2BAEf,GAAIL,EAAkBM,SAASR,EAAES,OAAOZ,KAAKa,OAC3C,OAAOH,MAAM,GAAD,OAAIV,EAAJ,4BAEZ,IAAMc,EAAa,CAAEC,GAAIC,cAAUhB,OAAMC,UACzC,EAAKK,MAAMW,eAAeH,GAC1B,EAAKI,SAAS,CACZlB,KAAM,GACNC,OAAQ,MApBhB,EAyBEkB,aAAe,SAAAhB,GACb,EAAKe,SAAL,eAAiBf,EAAES,OAAOZ,KAAOG,EAAES,OAAOC,SA1B9C,uDA6BY,IAAD,EACkBO,KAAKrB,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,0BAAMoB,UAAWC,IAAOC,KAAMC,SAAUJ,KAAKlB,cAC3C,2BAAOmB,UAAWC,IAAOG,OAAzB,OAEE,2BACEJ,UAAWC,IAAOI,MAClBC,KAAK,OACL3B,KAAK,OACLa,MAAOb,EACP4B,YAAY,kBACZC,UAAU,IACVC,UAAU,KACVC,SAAUX,KAAKD,gBAGnB,2BAAOE,UAAWC,IAAOG,OAAzB,SAEE,2BACEJ,UAAWC,IAAOI,MAClBC,KAAK,MACL3B,KAAK,SACLa,MAAOZ,EACP2B,YAAY,sBACZC,UAAU,KACVC,UAAU,KACVC,SAAUX,KAAKD,gBAGnB,4BAAQE,UAAWC,IAAOU,OAAQL,KAAK,UAAvC,oBA3DR,GAAiCM,a,gBCDpBC,EAAkB,SAAC,GAAD,IAAGzB,EAAH,EAAGA,QAAS0B,EAAZ,EAAYA,cAAZ,OAC7B,oCACE,wBAAId,UAAWC,IAAOc,MAAO3B,EAAQT,KAAO,KAAOS,EAAQR,QAC3D,4BAAQoB,UAAWC,IAAOU,OAAQjB,GAAIN,EAAQM,GAAIsB,QAASF,GAA3D,Y,iBCFSG,EAAc,SAAC,GAAD,IAAG/B,EAAH,EAAGA,SAAU4B,EAAb,EAAaA,cAAb,OACzB,wBAAId,UAAWC,IAAOiB,MACnBhC,EAASC,KAAI,SAAAC,GAAO,OACnB,kBAAC,EAAD,CACE+B,IAAK/B,EAAQM,GACbN,QAASA,EACT0B,cAAeA,S,gCCPVM,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAX,OACpB,oCACE,wBAAItB,UAAWC,IAAOsB,OAAtB,yBACA,2BACEvB,UAAWC,IAAOI,MAClBb,MAAO6B,EACPX,SAAUY,MAKhBF,EAAOI,WAAa,CAClBH,OAAQI,IAAUC,OAClBJ,aAAcG,IAAUE,M,oBCXpBC,EAAiB,SAACP,EAAQnC,GAC9B,OAAOA,EAASmC,QAAO,SAAAjC,GAAO,OAC5BA,EAAQT,KAAKkD,cAAcvC,SAAS+B,EAAOQ,mBAI1BC,E,4MACnBpD,MAAQ,CACNQ,SAAU,GACVmC,OAAQ,I,EAgBVzB,eAAiB,SAAAH,GACf,EAAKI,UAAS,SAAAkC,GAAI,MAAK,CACrB7C,SAAS,GAAD,mBAAM6C,EAAK7C,UAAX,CAAqBO,S,EAIjC6B,aAAe,SAAAxC,GACb,EAAKe,SAAS,CAAEwB,OAAQvC,EAAES,OAAOC,S,EAGnCsB,cAAgB,SAAAhC,GAAM,IAAD,EACU,EAAKJ,MAA1BQ,EADW,EACXA,SAAUmC,EADC,EACDA,OACZW,EAAmBJ,EAAeP,EAAQnC,GAC1CQ,EAAKZ,EAAES,OAAOG,GACpB,EAAKG,UAAS,SAAAkC,GAAI,MAAK,CACrB7C,SAAS,YAAK6C,EAAK7C,SAASmC,QAAO,SAAAjC,GAAO,OAAIA,EAAQM,KAAOA,UAE/B,IAA5BsC,EAAiBC,QACnB,EAAKpC,SAAS,CAAEwB,OAAQ,M,kEA9B1B,IAAMa,EAAoBC,aAAaC,QAAQ,YAC5CF,GACDnC,KAAKF,SAAS,CAACX,SAAUmD,KAAKC,MAAMJ,O,yCAIrBK,EAAWC,GACxBA,EAAUtD,WAAaa,KAAKrB,MAAMQ,UACpCiD,aAAaM,QAAQ,WAAYJ,KAAKK,UAAU3C,KAAKrB,MAAMQ,a,+BA0BrD,IAAD,EACsBa,KAAKrB,MAA1BQ,EADD,EACCA,SAAUmC,EADX,EACWA,OACZW,EAAmBJ,EAAeP,EAAQnC,GAChD,OACE,oCACE,wBAAIc,UAAWC,IAAOsB,OAAtB,aACA,kBAAC,EAAD,CAAa3B,eAAgBG,KAAKH,eAAgBV,SAAUA,IAC5D,wBAAIc,UAAWC,IAAOsB,OAAtB,aACErC,EAAS+C,QAAU,GAAuB,IAAlBZ,EAAOY,SAC/B,kBAAC,EAAD,CAAQZ,OAAQA,EAAQC,aAAcvB,KAAKuB,eAE7C,kBAAC,EAAD,CACEpC,SAAU8C,EACVX,OAAQA,EACRP,cAAef,KAAKe,qB,GAvDGF,aCPjC+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.41f69c28.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__3dE52\",\"label\":\"contactForm_label__1IZPV\",\"input\":\"contactForm_input__hYr2m\",\"button\":\"contactForm_button__3Qy-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"contactListItem_item__3WXCO\",\"button\":\"contactListItem_button__14RYM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"filter_title__YkyKA\",\"input\":\"filter_input__1ZgRe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3lWyM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__R0LTr\"};","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './contactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const doublicateContact = this.props.contacts.map(contact => contact.name);\r\n    if (!(name && number)) {\r\n      return alert('Please, fill all fields');\r\n    }\r\n    if (doublicateContact.includes(e.target.name.value)) {\r\n      return alert(`${name} is already in contacts`);\r\n    } else {\r\n      const newContact = { id: uuidv4(), name, number };\r\n      this.props.getContactInfo(newContact);\r\n      this.setState({\r\n        name: '',\r\n        number: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"Enter full name\"\r\n            minLength=\"4\"\r\n            maxLength=\"20\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"+38 (___) ___ __ __\"\r\n            minLength=\"10\"\r\n            maxLength=\"13\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  getContactInfo: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport styles from '../contactListItem/contactListItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ContactListItem = ({ contact, deleteContact }) => (\r\n  <>\r\n    <li className={styles.item}>{contact.name + ': ' + contact.number}</li>\r\n    <button className={styles.button} id={contact.id} onClick={deleteContact}>\r\n      Delete\r\n    </button>\r\n  </>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport { ContactListItem } from './contactListItem/ContactListItem';\r\nimport styles from './contactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ContactList = ({ contacts, deleteContact }) => (\r\n  <ul className={styles.list}>\r\n    {contacts.map(contact => (\r\n      <ContactListItem\r\n        key={contact.id}\r\n        contact={contact}\r\n        deleteContact={deleteContact}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  filter: PropTypes.string,\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport styles from '../filter/filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Filter = ({ filter, searchFilter }) => (\r\n  <>\r\n    <h3 className={styles.title}>Find contacts by name</h3>\r\n    <input\r\n      className={styles.input}\r\n      value={filter}\r\n      onChange={searchFilter}\r\n    ></input>\r\n  </>\r\n);\r\n\r\nFilter.proptTypes = {\r\n  filter: PropTypes.string,\r\n  searchFilter: PropTypes.func,\r\n};\r\n","import React, { Component } from 'react';\nimport { ContactForm } from '../components/contactForm/ContactForm';\nimport { ContactList } from '../components/contactList/ContactList';\nimport { Filter } from '../components/filter/Filter';\nimport styles from '../components/App.module.css';\n\nconst filterContacts = (filter, contacts) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem('contacts');\n    if(persistedContacts) {\n      this.setState({contacts: JSON.parse(persistedContacts)})\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  getContactInfo = newContact => {\n    this.setState(prev => ({\n      contacts: [...prev.contacts, newContact],\n    }));\n  };\n\n  searchFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  deleteContact = e => {\n    const { contacts, filter } = this.state;\n    const filteredContacts = filterContacts(filter, contacts);\n    const id = e.target.id;\n    this.setState(prev => ({\n      contacts: [...prev.contacts.filter(contact => contact.id !== id)],\n    }));\n    if (filteredContacts.length === 1) {\n      this.setState({ filter: '' });\n    }\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = filterContacts(filter, contacts);\n    return (\n      <>\n        <h2 className={styles.title}>Phonebook</h2>\n        <ContactForm getContactInfo={this.getContactInfo} contacts={contacts} />\n        <h2 className={styles.title}>Contacts</h2>\n        {(contacts.length >= 2 || filter.length !== 0) && (\n          <Filter filter={filter} searchFilter={this.searchFilter} />\n        )}\n        <ContactList\n          contacts={filteredContacts}\n          filter={filter}\n          deleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styleheet/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />, \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}